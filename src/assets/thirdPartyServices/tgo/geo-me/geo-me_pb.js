// source: geo-me.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('geo_me_tgo_geo_me.GeoRequest', null, global);
goog.exportSymbol('geo_me_tgo_geo_me.GeolocationResult', null, global);
goog.exportSymbol('geo_me_tgo_geo_me.Observation', null, global);
goog.exportSymbol('geo_me_tgo_geo_me.Target', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
geo_me_tgo_geo_me.GeoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, geo_me_tgo_geo_me.GeoRequest.repeatedFields_, null);
};
goog.inherits(geo_me_tgo_geo_me.GeoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  geo_me_tgo_geo_me.GeoRequest.displayName = 'geo_me_tgo_geo_me.GeoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
geo_me_tgo_geo_me.Target = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(geo_me_tgo_geo_me.Target, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  geo_me_tgo_geo_me.Target.displayName = 'geo_me_tgo_geo_me.Target';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
geo_me_tgo_geo_me.Observation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(geo_me_tgo_geo_me.Observation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  geo_me_tgo_geo_me.Observation.displayName = 'geo_me_tgo_geo_me.Observation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
geo_me_tgo_geo_me.GeolocationResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(geo_me_tgo_geo_me.GeolocationResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  geo_me_tgo_geo_me.GeolocationResult.displayName = 'geo_me_tgo_geo_me.GeolocationResult';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
geo_me_tgo_geo_me.GeoRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
geo_me_tgo_geo_me.GeoRequest.prototype.toObject = function(opt_includeInstance) {
  return geo_me_tgo_geo_me.GeoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!geo_me_tgo_geo_me.GeoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.GeoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    observationList: jspb.Message.toObjectList(msg.getObservationList(),
    geo_me_tgo_geo_me.Observation.toObject, includeInstance),
    target: (f = msg.getTarget()) && geo_me_tgo_geo_me.Target.toObject(includeInstance, f),
    provideKmlOut: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!geo_me_tgo_geo_me.GeoRequest}
 */
geo_me_tgo_geo_me.GeoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new geo_me_tgo_geo_me.GeoRequest;
  return geo_me_tgo_geo_me.GeoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!geo_me_tgo_geo_me.GeoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!geo_me_tgo_geo_me.GeoRequest}
 */
geo_me_tgo_geo_me.GeoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new geo_me_tgo_geo_me.Observation;
      reader.readMessage(value,geo_me_tgo_geo_me.Observation.deserializeBinaryFromReader);
      msg.addObservation(value);
      break;
    case 2:
      var value = new geo_me_tgo_geo_me.Target;
      reader.readMessage(value,geo_me_tgo_geo_me.Target.deserializeBinaryFromReader);
      msg.setTarget(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProvideKmlOut(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
geo_me_tgo_geo_me.GeoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  geo_me_tgo_geo_me.GeoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!geo_me_tgo_geo_me.GeoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.GeoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObservationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      geo_me_tgo_geo_me.Observation.serializeBinaryToWriter
    );
  }
  f = message.getTarget();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      geo_me_tgo_geo_me.Target.serializeBinaryToWriter
    );
  }
  f = message.getProvideKmlOut();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated Observation observation = 1;
 * @return {!Array<!geo_me_tgo_geo_me.Observation>}
 */
geo_me_tgo_geo_me.GeoRequest.prototype.getObservationList = function() {
  return /** @type{!Array<!geo_me_tgo_geo_me.Observation>} */ (
    jspb.Message.getRepeatedWrapperField(this, geo_me_tgo_geo_me.Observation, 1));
};


/**
 * @param {!Array<!geo_me_tgo_geo_me.Observation>} value
 * @return {!geo_me_tgo_geo_me.GeoRequest} returns this
*/
geo_me_tgo_geo_me.GeoRequest.prototype.setObservationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!geo_me_tgo_geo_me.Observation=} opt_value
 * @param {number=} opt_index
 * @return {!geo_me_tgo_geo_me.Observation}
 */
geo_me_tgo_geo_me.GeoRequest.prototype.addObservation = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, geo_me_tgo_geo_me.Observation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!geo_me_tgo_geo_me.GeoRequest} returns this
 */
geo_me_tgo_geo_me.GeoRequest.prototype.clearObservationList = function() {
  return this.setObservationList([]);
};


/**
 * optional Target target = 2;
 * @return {?geo_me_tgo_geo_me.Target}
 */
geo_me_tgo_geo_me.GeoRequest.prototype.getTarget = function() {
  return /** @type{?geo_me_tgo_geo_me.Target} */ (
    jspb.Message.getWrapperField(this, geo_me_tgo_geo_me.Target, 2));
};


/**
 * @param {?geo_me_tgo_geo_me.Target|undefined} value
 * @return {!geo_me_tgo_geo_me.GeoRequest} returns this
*/
geo_me_tgo_geo_me.GeoRequest.prototype.setTarget = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!geo_me_tgo_geo_me.GeoRequest} returns this
 */
geo_me_tgo_geo_me.GeoRequest.prototype.clearTarget = function() {
  return this.setTarget(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
geo_me_tgo_geo_me.GeoRequest.prototype.hasTarget = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool provide_kml_out = 3;
 * @return {boolean}
 */
geo_me_tgo_geo_me.GeoRequest.prototype.getProvideKmlOut = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!geo_me_tgo_geo_me.GeoRequest} returns this
 */
geo_me_tgo_geo_me.GeoRequest.prototype.setProvideKmlOut = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
geo_me_tgo_geo_me.Target.prototype.toObject = function(opt_includeInstance) {
  return geo_me_tgo_geo_me.Target.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!geo_me_tgo_geo_me.Target} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.Target.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    trueLat: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    trueLon: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!geo_me_tgo_geo_me.Target}
 */
geo_me_tgo_geo_me.Target.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new geo_me_tgo_geo_me.Target;
  return geo_me_tgo_geo_me.Target.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!geo_me_tgo_geo_me.Target} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!geo_me_tgo_geo_me.Target}
 */
geo_me_tgo_geo_me.Target.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTrueLat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTrueLon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
geo_me_tgo_geo_me.Target.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  geo_me_tgo_geo_me.Target.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!geo_me_tgo_geo_me.Target} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.Target.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTrueLat();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTrueLon();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
geo_me_tgo_geo_me.Target.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!geo_me_tgo_geo_me.Target} returns this
 */
geo_me_tgo_geo_me.Target.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
geo_me_tgo_geo_me.Target.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!geo_me_tgo_geo_me.Target} returns this
 */
geo_me_tgo_geo_me.Target.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double true_lat = 3;
 * @return {number}
 */
geo_me_tgo_geo_me.Target.prototype.getTrueLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Target} returns this
 */
geo_me_tgo_geo_me.Target.prototype.setTrueLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double true_lon = 4;
 * @return {number}
 */
geo_me_tgo_geo_me.Target.prototype.getTrueLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Target} returns this
 */
geo_me_tgo_geo_me.Target.prototype.setTrueLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
geo_me_tgo_geo_me.Observation.prototype.toObject = function(opt_includeInstance) {
  return geo_me_tgo_geo_me.Observation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!geo_me_tgo_geo_me.Observation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.Observation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assetid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    meas: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    type: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!geo_me_tgo_geo_me.Observation}
 */
geo_me_tgo_geo_me.Observation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new geo_me_tgo_geo_me.Observation;
  return geo_me_tgo_geo_me.Observation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!geo_me_tgo_geo_me.Observation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!geo_me_tgo_geo_me.Observation}
 */
geo_me_tgo_geo_me.Observation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMeas(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
geo_me_tgo_geo_me.Observation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  geo_me_tgo_geo_me.Observation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!geo_me_tgo_geo_me.Observation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.Observation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAssetid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getMeas();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
geo_me_tgo_geo_me.Observation.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string assetId = 2;
 * @return {string}
 */
geo_me_tgo_geo_me.Observation.prototype.getAssetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setAssetid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double lat = 3;
 * @return {number}
 */
geo_me_tgo_geo_me.Observation.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double lon = 4;
 * @return {number}
 */
geo_me_tgo_geo_me.Observation.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double x = 5;
 * @return {number}
 */
geo_me_tgo_geo_me.Observation.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double y = 6;
 * @return {number}
 */
geo_me_tgo_geo_me.Observation.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double meas = 7;
 * @return {number}
 */
geo_me_tgo_geo_me.Observation.prototype.getMeas = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setMeas = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string type = 8;
 * @return {string}
 */
geo_me_tgo_geo_me.Observation.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!geo_me_tgo_geo_me.Observation} returns this
 */
geo_me_tgo_geo_me.Observation.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.toObject = function(opt_includeInstance) {
  return geo_me_tgo_geo_me.GeolocationResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!geo_me_tgo_geo_me.GeolocationResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.GeolocationResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    residual: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    residualRk: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    lat: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    lon: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    elpLong: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    elpShort: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    elpRot: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    kmlOutput: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, ""),
    statusmessage: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!geo_me_tgo_geo_me.GeolocationResult}
 */
geo_me_tgo_geo_me.GeolocationResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new geo_me_tgo_geo_me.GeolocationResult;
  return geo_me_tgo_geo_me.GeolocationResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!geo_me_tgo_geo_me.GeolocationResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!geo_me_tgo_geo_me.GeolocationResult}
 */
geo_me_tgo_geo_me.GeolocationResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setResidual(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setResidualRk(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLon(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setElpLong(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setElpShort(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setElpRot(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setKmlOutput(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusmessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  geo_me_tgo_geo_me.GeolocationResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!geo_me_tgo_geo_me.GeolocationResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
geo_me_tgo_geo_me.GeolocationResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResidual();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getResidualRk();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getLat();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLon();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getElpLong();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getElpShort();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getElpRot();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getKmlOutput();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStatusmessage();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional double residual = 1;
 * @return {number}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getResidual = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setResidual = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double residual_rk = 2;
 * @return {number}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getResidualRk = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setResidualRk = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double lat = 3;
 * @return {number}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getLat = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setLat = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double lon = 4;
 * @return {number}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getLon = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setLon = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double elp_long = 5;
 * @return {number}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getElpLong = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setElpLong = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double elp_short = 6;
 * @return {number}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getElpShort = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setElpShort = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double elp_rot = 7;
 * @return {number}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getElpRot = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setElpRot = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string kml_output = 8;
 * @return {string}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getKmlOutput = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setKmlOutput = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string statusMessage = 10;
 * @return {string}
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.getStatusmessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!geo_me_tgo_geo_me.GeolocationResult} returns this
 */
geo_me_tgo_geo_me.GeolocationResult.prototype.setStatusmessage = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


goog.object.extend(exports, geo_me_tgo_geo_me);
